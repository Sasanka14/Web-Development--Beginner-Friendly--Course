In this lecture we learn about Inline & Block Element in HTML.

So Let's begin,

     Q1. What is Inline element ?
-----> Inline elements in HTML are elements that do not start on a new line and only occupy the space necessary for their content. 
       Inline elements are typically used for styling and formatting text within block-level elements. Examples of inline elements 
       include `<span>`,`<a>`, `<strong>`, `<em>`, `<img>`, `<input>`, `<br>`, `<b>`, `<i>`, and others. They are commonly 
       employed for applying styles such as bold, italics, underlining, and adding hyperlinks within paragraphs, headings, and other 
       structural elements of a webpage.

    Q2. What is block element ?
-----> Block elements in HTML are elements that typically start on a new line and occupy the full width available to them. They create
       a visual block-level separation from surrounding content, causing subsequent elements to appear on a new line after them. 
       Block-level elements are often used for structuring the layout of a webpage, such as defining sections, paragraphs, headings, 
       lists, and containers. Examples of block-level elements include `<div>`, `<p>`, `<h1>` to `<h6>`, `<ul>`, `<ol>`, `<li>`, 
       `<header>`, `<footer>`, `<nav>`, `<section>`, `<article>`, and others. They are commonly used to organize and present content 
       in a clear and hierarchical manner.

Comprehensive list of Inline and Block Elements::

1. Block Elements (Most Commonly Used First)

<div>: A generic container for flow content.
<p>: Paragraph.
<h1>, <h2>, <h3>, <h4>, <h5>, <h6>: Headings.
<ul>: Unordered list.
<ol>: Ordered list.
<li>: List item.
<form>: A section containing form controls.
<table>: Table.
<section>: A standalone section of a document.
<header>: A container for introductory content or a set of navigational links.
<footer>: Footer of a section or page.
<nav>: A section of a page that contains navigation links.
<article>: A self-contained composition in a document.
<aside>: A section of a page that contains information indirectly related to the main content.
<main>: The main content of a document.
<fieldset>: A set of form controls grouped under a common name.
<blockquote>: A block of text that is a quotation from another source.
<pre>: Preformatted text.
<canvas>: A container used to draw graphics via JavaScript.
<dl>: Description list.
<dt>: Term in a description list.
<dd>: Description in a description list.
<figure>: Any content that is referenced from the main content.
<figcaption>: A caption for a <figure> element.
<address>: Contact information for the author or owner of the document.
<hr>: A thematic break or a horizontal rule.
<tfoot>: Footer of a table.



2. Inline Elements (Most Commonly Used First)
<a>: Anchor or hyperlink.
<img>: Image.
<span>: Generic inline container.
<input>: Input field.
<label>: Label for a form element.
<strong>: Strong emphasis.
<em>: Emphasized text.
<br>: Line break.
<code>: Code snippet.
<b>: Bold text.
<i>: Italic text.
<u>: Underlined text.
<small>: Smaller text.
<sub>: Subscript.
<sup>: Superscript.
<mark>: Marked or highlighted text.
<q>: Short inline quotation.
<cite>: Citation.
<kbd>: Keyboard input.
<samp>: Sample output.
<var>: Variable in a mathematical expression or programming context.
<time>: Time.
<abbr>: Abbreviation.
<data>: Machine-readable translation of content.
<acronym>: Acronym (Not supported in HTML5).

     Q3. Key differences of inline and block elements ?
-----> Here are the key differences between block and inline elements:

1. **Visual Separation:**
   - Block elements create a distinct "block" of content, visually separated from adjacent elements, while inline elements 
   flow within the text without creating such visual breaks.

2. **Layout Properties:**
   - Block elements allow for setting properties such as margins, padding, width, and height, affecting the layout of the page. 
   Inline elements do not have the same effect on layout flow and are typically limited in terms of layout properties.

3. **Containment:**
   - Block elements can contain other block and inline elements within them, allowing for nested structures. In contrast, inline
    elements cannot contain block-level elements and are generally nested within block-level elements.

    For reference you go and check "inline&block.html"

Understanding these differences helps in effectively structuring and styling HTML content based on the desired layout and visual
presentation.