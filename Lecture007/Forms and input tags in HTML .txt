In this lecture we learn Forms and Input tags in HTML. 

So, Let's begin,
  
    Q1. What is Form ?
-----> A form in web development is a user interface element used to collect and submit data to a web server. It typically consists of
       input fields, checkboxes, radio buttons, dropdown lists, and buttons that allow users to enter information such as text, numbers,
        selections, and file uploads. Forms are commonly used for various purposes including user registrations, logins, surveys, and 
        data submissions. Once the user fills out the form and submits it, the data is sent to a server for processing, such as storing 
        it in a database or performing specific actions based on the submitted data.
    
    Types Of Form ?
---> In web development, forms can be classified based on their method of data submission. The two primary types of forms are:

    A. GET Form:

    I. Uses the HTTP GET method to submit form data.
   II. Data is appended to the URL in the form of key-value pairs.
  III. Suitable for transferring small amounts of data and when data visibility is not a concern.
   IV. Data is visible in the browser's address bar and can be bookmarked or shared.

    B. POST Form:

    I. Uses the HTTP POST method to submit form data.
   II. Data is sent in the body of the HTTP request, not visible in the URL.
  III. Suitable for transferring large amounts of data and when data privacy and security are important.
   IV. Data is not visible in the browser's address bar and cannot be bookmarked or shared directly.

   Q2. What is Input tags ?
----> The `<input>` tag in HTML is used to create interactive form controls within a web page. It is a self-closing tag and does not 
      require a closing tag. The `<input>` tag supports various types of input fields, such as text fields, checkboxes, radio buttons, 
      submit buttons, and more.

Here are some common attributes used with the `<input>` tag:

- **type:** Specifies the type of input field (e.g., text, password, checkbox, radio, submit).
- **name:** Provides a name for the input field, which is used when submitting the form data.
- **value:** Specifies the initial value of the input field.
- **placeholder:** Displays a hint or example text within the input field.
- **required:** Specifies that the input field must be filled out before submitting the form.
- **disabled:** Disables the input field, preventing users from interacting with it.
- **readonly:** Makes the input field read-only, allowing users to view but not modify its value.
- **maxlength:** Specifies the maximum number of characters allowed in a text field.

The `<input>` tag is essential for creating user-friendly forms in HTML, allowing users to input data that can be submitted to a 
server for processing. 
   
   what is label and id ?
---> In HTML, the `<label>` and `id` attributes are used in conjunction to improve the accessibility and functionality of forms:

- **Label (`<label>`):** The `<label>` tag defines a label for an input element. It helps users understand what information is expected
 in an input field. When a `<label>` is associated with an input element, clicking on the label will focus or activate the corresponding
 input field. This association is established using the `for` attribute in the `<label>` tag, which references the `id` attribute of the
 input element it labels.

- **ID (`id`):** The `id` attribute uniquely identifies an HTML element within a document. It must be unique within the document, 
  meaning no other element can have the same `id`. The `id` attribute is often used to associate a label with an input element by 
  matching the `for` attribute of the `<label>` tag to the `id` attribute of the input element. This association allows users to click 
  on the label to interact with the corresponding input field, making forms more accessible and user-friendly.

Here's an example of how `<label>` and `id` attributes are used together:

"<label for="username">Username:</label>
<input type="text" id="username" name="username">"


You will better understand with the example of "form.html".
 

