In this lecture we learn about Css Box-model

So,Lets begin


     Q1. What is Css Box-model ?
------> The CSS Box Model is a fundamental concept that defines the layout and sizing of elements on a webpage. It consists of four main 
        components: content, padding, border, and margin. Here's a breakdown of each component:

  1. Content: This is the actual content of the element, such as text, images, or other media. It is surrounded by padding, border, and 
              margin.
  2. Padding: Padding is the space between the content and the border of the element. It provides internal spacing and helps separate 
               the content from the border.
  3. Border: The border is the outermost layer of the box model and surrounds the padding and content. It can have various styles, colors, 
             and widths, allowing you to visually separate elements on the webpage.
  4. Margin: Margin is the space outside the border of the element. It creates space between the element and adjacent elements on the 
             page, controlling the layout and spacing between elements.

             For reference you can see "box-model.png"

    Calculating the total dimension of the element
The total width and height of the element is calculated with the formula:

Total Width = Width + Left Padding + Right Padding + Left Border + Right Border + Left Margin + Right Margin

Total Height = Height + Top Padding + Bottom Padding + Top Border + Bottom Border + Top Margin + Bottom Margin


Example:

<head>
    <style>
        p{
            width: 200px;
            height: 300px;
            padding: 15px;
            border: 10px solid red;
            margin: 5px;
        }
    </style>
</head>
<body>
    <p>Sasanka</p>
</body>
</html>

Here, the total height and width will be represented as

Total Width = 200px (width) + 15px (left padding) + 15px (right padding) + 10px (left border) + 10px (right border) + 5px (left margin) + 5px (right margin) = 260px.

Total Height = 300px (Height) + 15px (Top Padding) + 15px (Bottom Padding) + 10px (Top Border) + 10px (Bottom Border) + 5px (Top Margin) + 5px (Bottom Margin) = 360px



     Q2. What is margin collapse ?
-----> Margin collapse is a behavior in CSS where the margins of adjacent elements collapse into a single margin under certain conditions.
       When two vertical margins meet, instead of being added together, they collapse to the larger of the two margins, or collapse to 
       zero if one of the margins is negative.

         Margin collapse typically occurs in the following scenarios:

  1. Adjacent Sibling Elements: When two elements are adjacent to each other, the margins between them collapse if there is no content, 
                                padding, or border separating them.
  2. Parent-Child Relationship: Margins of a child element can collapse with the margins of its parent element under specific conditions, 
                                such as when the parent has no padding, border, or content that separates it from the child.
  3. Empty Blocks: Margins of empty block-level elements collapse, resulting in the collapse of their top and bottom margins. 
      

       For the reference you can see "margin-collapse.png"


    Q3. what is box-sizing: border-box ? when to use or when not to use ?
---->  `box-sizing: border-box;` is a CSS property that changes the way the browser calculates the total width and height of an element, 
        including its padding and border.

                             When `box-sizing` is set to `border-box`, the width and height of the element include the content, padding, 
                             and border, but not the margin. This means that if you set a specific width or height for an element with 
                             `box-sizing: border-box;`, the padding and border are included within that width or height, and any 
                             adjustments to the padding or border will not affect the overall size of the element.

This property is particularly useful in responsive web design and layout frameworks like Bootstrap, where it helps to maintain consistent 
spacing and alignment of elements regardless of the padding or border applied.

**When to Use `box-sizing: border-box;`:**
- Use `border-box` when you want to specify the exact dimensions of an element, including its padding and border, and want to ensure 
  that changes to padding and border do not affect the overall layout.
- It is especially useful in complex layouts where maintaining consistent spacing and alignment is crucial, such as in grid-based or 
  responsive designs.

**When Not to Use `box-sizing: border-box;`:**
- Avoid using `border-box` if you prefer the traditional CSS box model behavior, where the width and height are calculated without 
  including padding and border.
- If you rely heavily on CSS frameworks or libraries that do not use `border-box` by default, changing the box-sizing property may lead to
  unexpected results or conflicts with existing styles.

